+ mean(paste("`",mydata[i],"`","$",pollutant),na.rm = TRUE)
te("`", mydata[i], "`", "$", pollutant)
paste("`", mydata[i], "`", "$", pollutant)
paste(mydata[i],"$", pollutant,sep="")
paste("`", mydata[i], "`", "$", pollutant,sep="")
for (i in id)
+ mean(paste("`",mydata[i],"`","$",pollutant,sep = ""),na.rm = TRUE)
for (i in id)
+ mean(paste(mydata[i],"$",pollutant,sep = ""),na.rm = TRUE)
mean(paste("`", mydata[i], "`", "$", pollutant,sep=""),na.rm = T)
mean(paste(mydata[i], "$", pollutant,sep=""),na.rm = T)
mydata[i]
search()
search(".GlobalEnv")
search(.GlobalEnv)
search()
1
search(1)
mean(paste("`", mydata[i], "`", "$", pollutant,sep=""),na.rm = T)
mean(mydata$nitrate,na.rm = T)
mean(mydata[23]$nitrate,na.rm = T)
mean(`005.csv`$nitrate,na.rm = T)
globalenv(`001.csv`)
globalenv(001.csv)
globalVariables(`001.csv`)
mean(globalVariables(001.csv)$nitrate,na.rm=T)
mean(globalVariables("001.csv")$nitrate,na.rm=T)
as.data.frame(read.csv("C:/Users/Jesus/Desktop/data/specdata/001.csv"))
assign("c001", as.data.frame(read.csv("C:/Users/Jesus/Desktop/data/specdata/001.csv"))
assign("c001", as.data.frame(read.csv("C:/Users/Jesus/Desktop/data/specdata/001.csv")))
c001
c001
c001$nitrate
assign("c001", as.data.frame(read.csv("C:/Users/Jesus/Desktop/data/specdata/001.csv")))
directory<-"C:/Users/Jesus/Desktop/data/specdata/"
id<-23
assign(paste(mydata[i]), as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
assign(paste("c",i), as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
assign(paste("c",i), as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
assign("c001", as.data.frame(read.csv("C:/Users/Jesus/Desktop/data/specdata/001.csv")))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
assign(paste("c",as.character(i)), as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
getwd()
data2<-read.csv(mydata[i])
mydata
data2<-read.csv(mydata)
data2<-read.csv(mydata)
mydata2<-c["040.csv","041.csv"]
mydata2<-c["040.csv""041.csv"]
mydata2<-"040.csv""041.csv"
id<-1:10
filenames <- sprintf("%03d.csv", id)
data2<-read.csv(filenames)
filename<-paste("c",i)
filename
filename<-paste("c",i,sep"")
filename<-paste("c",i,sep="")
filename
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
filename<-paste("c",i,sep = "")
assign(dataset, as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
filename<-paste("c",i,sep = "")
assign(filename, as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
assign(filename, read.csv(paste(directory,mydata[i],sep"")))
001.csv[[nitrate]]
001.csv[[nitrate]
001.csv[nitrate]
`001.csv`[nitrate]
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
assign(mydata[i], as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
View(`023.csv`)
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
datanames[i]<-paste("c",i,sep = "")
datanames
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
datanames=paste("c",i,sep = "")
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
for (i in id)
datanames=list.paste("c",i,sep = "")
filenames
filenames
filenames<-gsub(".csv","",mydata)
filenames
filenames<-gsub(".csv","c",mydata)
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
datanames=list.paste("c",i,sep = "")
for (i in id)
assign(mydata[i], as.data.frame(read.csv(paste(directory,mydata[i],sep""))))
filenames[1]
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
datanames=list.paste("c",i,sep = "")
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep"")))
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep"")))
rm(i)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep"")))
rm(i,filenames,mydata)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep"")))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep""),sep","))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep=""),sep","))
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","c",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
001c[nitrate]
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","cs",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
008cs$nitrate
008cs[[nitrate]]
View(`009cs`)
`009cs`
mean(009cs)
a<<-009cs
a
b=`009cs`
b
filename<-"009.csv"
filename
mean(filename,rm.na=T)
mean("filename",rm.na=T)
getwd()
directory<-"C:/Users/Jesus/Desktop/data/specdata"
pollutant<-"nitrate"
id<-0:10
id<-1:10
pollutetanmean<-function(directory, pollutant, id=1:332)
mydata=list.files(directory)
filenames<-gsub(".csv","cs",mydata)
for (i in id)
assign(filenames[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
mydata=list.files(directory)
filenames<-gsub(".csv","cs",mydata)
for (i in id)
assign(filenames[i], as.data.frame(read.csv(paste(directory,mydata[i],sep=""),sep=",")))
directory<-"C:/Users/Jesus/Desktop/data/specdata/"
for (i in id)
assign(filenames[i], as.data.frame(read.csv(paste(directory,mydata[i],sep=""),sep=",")))
001cs$nitrate
View(`001cs`)
for (i in id)
assign(mydata[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
assign(means[i],mean(mydata[i],na.rm = TRUE))
for (i in id)
assign(mydata[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
assign(filenames[i],mean(mydata[i],na.rm = TRUE))
for (i in id)
assign(mydata[i], read.csv(paste(directory,mydata[i],sep=""),sep=","))
assign(filenames[i],mean(as.character(mydata[i]),na.rm = TRUE))
mydata[i]
mean("mydata[i]",na.rm = T)
mean(paste("mydata[i]"),na.rm = T)
mean(as.character(mydata[i]),na.rm = T)
filename<-paste("`",mydata[i],"`",sep = "")
filename
mean(as.character(filename),na.rm = TRUe)
mean(as.character(filename),na.rm = TRUe)
mean(as.character(filename),na.rm = TRUe)
mean(as.character(filename),na.rm = TRUe)
lapply(mydata[i],mean(no.rm=TRUE))
lapply(mydata[i],mean
)
x<-list(mydata)
x
rbind(`001.csv`,0`002.csv`)
rbind(`001.csv`,`002.csv`)
dataset<-rbind.data.frame(mydata)
dataset
View(dataset)
myfiles = do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles = do.call("rbind", lapply(mydata, function(x) read.csv(x, stringsAsFactors = FALSE)))
mydata=list.files(directory)
filenames<-gsub(".csv","mean",mydata)
for (i in id)
datalist=lapply(mydata,function(x)
{read.csv(file=paste(directory,mydata[i],sep = ""),header = T)})
merge(datalist)
merge(datalist)
mydata=list.files(directory)
for (i in id)
datalist=lapply(mydata,function(x)
{read.csv(file=paste(directory,mydata[i],sep = ""),header = T)})
datalist
mean(datalist[nitrate],na.rm = T)
mean(datalist$nitrate,na.rm = T)
y<-as.data.frame(datalist)
View(y)
rbind(datalist)
q<-rbind(datalist)
View(q)
q<-cbind(datalist)
y$nitrate.1
View(`003.csv`)
set<-merge(datalist,by.x="Date")
mean
merge(mydata,by.x="Date")
mydata=list.files(directory)
for (i in id)
datalist<-do.call(rbind,lapply(mydata,function(x)
{read.csv(file=paste(directory,mydata[i],sep = ""),header = T)}))
View(datalist)
mean(datalist$nitrate)
mean(datalist$nitrate,na.rm = T)
mydatau=mydata[id]
rm(*.csv)
rm("*.csv")
mydata=list.files(directory)
mydatau=mydata[id]
for (i in id)
datalist<-do.call(rbind,lapply(mydatau,function(x)
{read.csv(file=paste(directory,mydatau[i],sep = ""),header = T)}))
mean(datalist,na.rm = T)
mean(datalist$nitrate,na.rm = T)
mean(datalist$sulfate,na.rm = T)
set.seed(1)
rpois(5,2)
?qnorm
?rnorm
?qpois
set.seed(10)
x<-rep(0:1,each=5)
e<-rnorm(10,0,20)
y<-0.5
y<-0.5+2*x+e
#Set the working directory to read the data
setwd("C:/datahouse")
#Read the file and subset it to 1st and 2nd February
powerdata<-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
powerdata<-powerdata[powerdata$Date=="1/2/2007"|powerdata$Date=="2/2/2007",]
datatest<-powerdata
View(datatest)
as.Date(datatest$Date, "%d/%m/%Y")
datatest$Date<-as.Date(datatest$Date, "%d/%m/%Y")
strftime(datatest$Time,format = "%H:%M:%S")
strftime(datatest$Time,format = "%H:%M:%S")
strptime(datatest$Time)
strptime(datatest$Time, format = "%H:%M:%S")
paste(datatest$Date,strptime(datatest$Time, format = "%H:%M:%S"))
?strptime
strftime(datatest$Time,format = "%H:%M:%S")
strftime(datatest$Time,format ="%H:%M:%S")
strptime(datatest$Time)
strftime(datatest$Time)
strptime(datatest$Time,format = "%H:%M:%S")
strptime(datatest$Time,"%H:%M:%S")
as.POSIXct.Date(paste(datatest$Date,datatest$Time))
as.POSIXct(paste(datatest$Date,datatest$Time))
#Create a DateTime Column for future use
powerdata$Date<-as.Date(powerdata$Date, "%d/%m/%Y")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
View(powerdata)
powerdata$DateTime
plot(powerdata$DateTime,powerdata$Global_active_power,type = "l")
#Write the subsetted data to a file for future plots
write.table(powerdata,file = "powerdata.txt",sep = ";")
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power(Kilowatts)",xlab = "" ,type="l")
#Start png dev, to save the plot to a png file
png(filename = "C:/datahouse/plot2.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power(Kilowatts)",xlab = "" ,type="l")
dev.off()
Sys.setlocale("LC_TIME","English")
#Start png dev, to save the plot to a png file
png(filename = "C:/datahouse/plot2.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power(Kilowatts)",xlab = "" ,type="l")
dev.off()
View(datatest)
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
legend
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$Sub_metering_2,type = "l")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$Sub_metering_2,type = "l")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(poerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
png(filename = "C:/datahouse/plot3.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
dev.off()
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$Sub_metering_3,type = "l",col="blue")
View(powerdata)
summary(powerdata$Sub_metering_2)
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
min(powerdata$Sub_metering_2)
#Set the working directory to read the data
setwd("C:/datahouse")
#Read the file and subset it to 1st and 2nd February
powerdata<-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
powerdata<-powerdata[powerdata$Date=="1/2/2007"|powerdata$Date=="2/2/2007",]
#Create a DateTime Column for future use
powerdata$Date<-as.Date(powerdata$Date, "%d/%m/%Y")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
#Write the subsetted data to a file for future plots
write.table(powerdata,file = "powerdata.txt",sep = ";")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
View(powerdata)
powerdata$Sub_metering_2
as.numeric(powerdata$Sub_metering_2)
as.integer(powerdata$Sub_metering_2)
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
plot(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
powerdata$Sub_metering_2[which(powerdata$Sub_metering_2>3)]
powa<-data.frame(powerdata)
plot(powa$DateTime,powa$Sub_metering_2)
plot(powerdata$DateTime,powerdata$Voltage,type = "l")
as.numeric(powerdata$Voltage)
243.510
as.character(powerdata$Voltage)
as.numeric(as.character(powerdata$Voltage))
as.numeric(as.character(powerdata$Sub_metering_2))
powerdata$Sub_metering_1<-as.numeric(as.character(powerdata$Sub_metering_1))
powerdata$Sub_metering_2<-as.numeric(as.character(powerdata$Sub_metering_2))
powerdata$Sub_metering_3<-as.numeric(as.character(powerdata$Sub_metering_3))
#Start png dev, to save the plot to a png file
png(filename = "C:/datahouse/plot3.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
plot(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
dev.off()
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
View(powerdata)
powerdata$DateTime
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
powerdata$DateTime
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
#Start png dev, to save the plot to a png file
png(filename = "C:/datahouse/plot3.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
dev.off()
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legend("topright",legend = legendname)
legend("topright",legend = legendname,col =c("black","red","blue"))
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol)
legend("topright",legend = legendname,col =legendcol,lty = "solid")
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
#Start png dev, to save the plot to a png file
png(filename = "C:/datahouse/plot3.png",width = 480,height = 480,units = "px")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l",
xlab = "",ylab = "Energy sub metering")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Create legend
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol,lty = "solid")
dev.off()
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
par(mfrow=c(2,2))
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power(Kilowatts)",xlab = "",type="l")
plot(powerdata$DateTime,powerdata$Voltage, type="l")
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
par(mfrow=c(2,2))
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power(Kilowatts)",xlab = "",type="l")
plot(powerdata$DateTime,powerdata$Voltage, type="l")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l",
xlab = "",ylab = "Energy sub metering")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Create legend
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol,lty = "solid")
plot(powerdata$DateTime,powerdata$Global_reactive_power, type = "l")
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
par(mfrow=c(2,2))
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power",xlab = "",type="l")
plot(powerdata$DateTime,powerdata$Voltage, type="l",
ylab = "Voltage",xlab = "datetime")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l",
xlab = "",ylab = "Energy sub metering")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Create legend
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol,lty = "solid")
plot(powerdata$DateTime,powerdata$Global_reactive_power, type = "l"
ylab="Global reactive power",xlab="datetime" )
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
par(mfrow=c(2,2))
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power",xlab = "",type="l")
plot(powerdata$DateTime,powerdata$Voltage, type="l",
ylab = "Voltage",xlab = "datetime")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l",
xlab = "",ylab = "Energy sub metering")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Create legend
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol,lty = "solid")
plot(powerdata$DateTime,powerdata$Global_reactive_power, type = "l",
ylab="Global reactive power",xlab="datetime" )
#Recover powerdata, which is properly cleaned for its use
setwd("C:/datahouse")
powerdata<-read.table("powerdata.txt", header = TRUE, sep = ";")
powerdata$DateTime<-as.POSIXct(paste(powerdata$Date,powerdata$Time))
#Turn on the dev to export to a PNG
png(filename = "C:/datahouse/plot4.png",width = 480,height = 480,units = "px")
#Declare 4 spaces for plot
par(mfrow=c(2,2))
plot(powerdata$DateTime,powerdata$Global_active_power,
ylab="Global Active Power",xlab = "",type="l")
plot(powerdata$DateTime,powerdata$Voltage, type="l",
ylab = "Voltage",xlab = "datetime")
plot(powerdata$DateTime,powerdata$Sub_metering_1,type = "l",
xlab = "",ylab = "Energy sub metering")
lines(powerdata$DateTime,powerdata$Sub_metering_2,type = "l",col="red")
lines(powerdata$DateTime,powerdata$Sub_metering_3,type = "l",col="blue")
#Create legend
legendname=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
legendcol=c("black","red","blue")
legend("topright",legend = legendname,col =legendcol,lty = "solid")
plot(powerdata$DateTime,powerdata$Global_reactive_power, type = "l",
ylab="Global reactive power",xlab="datetime" )
dev.off()
